/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Arrays, ArraysInterface } from "../Arrays";

const _abi = [
  {
    inputs: [],
    name: "defineArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defineName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNames",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getarray",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061094f806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630cfd0fae14610051578063268769781461006f578063975fb56214610079578063cd838f0f14610083575b600080fd5b6100596100a1565b604051610066919061047d565b60405180910390f35b6100776100ec565b005b61008161011c565b005b61008b6101ae565b60405161009891906105ea565b60405180910390f35b6100a9610287565b60006002806020026040519081016040528092919082600280156100e2576020028201915b8154815260200190600101908083116100ce575b5050505050905090565b6040518060400160405280600a60ff168152602001601460ff1681525060009060026101199291906102a9565b50565b60405180604001604052806040518060400160405280600581526020017f41686d656400000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f556261696400000000000000000000000000000000000000000000000000000081525081525060029060026101ab9291906102ee565b50565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561027e5783829060005260206000200180546101f19061063b565b80601f016020809104026020016040519081016040528092919081815260200182805461021d9061063b565b801561026a5780601f1061023f5761010080835404028352916020019161026a565b820191906000526020600020905b81548152906001019060200180831161024d57829003601f168201915b5050505050815260200190600101906101d2565b50505050905090565b6040518060400160405280600290602082028036833780820191505090505090565b82600281019282156102dd579160200282015b828111156102dc578251829060ff169055916020019190600101906102bc565b5b5090506102ea9190610347565b5090565b828054828255906000526020600020908101928215610336579160200282015b828111156103355782518290816103259190610847565b509160200191906001019061030e565b5b5090506103439190610364565b5090565b5b80821115610360576000816000905550600101610348565b5090565b5b80821115610384576000818161037b9190610388565b50600101610365565b5090565b5080546103949061063b565b6000825580601f106103a657506103c5565b601f0160209004906000526020600020908101906103c49190610347565b5b50565b600060029050919050565b600081905092915050565b6000819050919050565b6000819050919050565b6103fb816103e8565b82525050565b600061040d83836103f2565b60208301905092915050565b6000602082019050919050565b61042f816103c8565b61043981846103d3565b9250610444826103de565b8060005b8381101561047557815161045c8782610401565b965061046783610419565b925050600181019050610448565b505050505050565b60006040820190506104926000830184610426565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104fe5780820151818401526020810190506104e3565b60008484015250505050565b6000601f19601f8301169050919050565b6000610526826104c4565b61053081856104cf565b93506105408185602086016104e0565b6105498161050a565b840191505092915050565b6000610560838361051b565b905092915050565b6000602082019050919050565b600061058082610498565b61058a81856104a3565b93508360208202850161059c856104b4565b8060005b858110156105d857848403895281516105b98582610554565b94506105c483610568565b925060208a019950506001810190506105a0565b50829750879550505050505092915050565b600060208201905081810360008301526106048184610575565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061065357607f821691505b6020821081036106665761066561060c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106fd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106c0565b61070786836106c0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061074461073f61073a846103e8565b61071f565b6103e8565b9050919050565b6000819050919050565b61075e83610729565b61077261076a8261074b565b8484546106cd565b825550505050565b600090565b61078761077a565b610792818484610755565b505050565b5b818110156107b6576107ab60008261077f565b600181019050610798565b5050565b601f8211156107fb576107cc8161069b565b6107d5846106b0565b810160208510156107e4578190505b6107f86107f0856106b0565b830182610797565b50505b505050565b600082821c905092915050565b600061081e60001984600802610800565b1980831691505092915050565b6000610837838361080d565b9150826002028217905092915050565b610850826104c4565b67ffffffffffffffff8111156108695761086861066c565b5b610873825461063b565b61087e8282856107ba565b600060209050601f8311600181146108b1576000841561089f578287015190505b6108a9858261082b565b865550610911565b601f1984166108bf8661069b565b60005b828110156108e7578489015182556001820191506020850194506020810190506108c2565b868310156109045784890151610900601f89168261080d565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220e221fd5d059dbea31c7a4ef1d8af62dc052208249b2bf5ab83e46a6c5305954464736f6c63430008120033";

type ArraysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArraysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Arrays__factory extends ContractFactory {
  constructor(...args: ArraysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Arrays> {
    return super.deploy(overrides || {}) as Promise<Arrays>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Arrays {
    return super.attach(address) as Arrays;
  }
  override connect(signer: Signer): Arrays__factory {
    return super.connect(signer) as Arrays__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArraysInterface {
    return new utils.Interface(_abi) as ArraysInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Arrays {
    return new Contract(address, _abi, signerOrProvider) as Arrays;
  }
}
