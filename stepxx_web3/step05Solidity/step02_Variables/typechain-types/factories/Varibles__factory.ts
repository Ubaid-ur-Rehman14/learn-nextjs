/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Varibles, VariblesInterface } from "../Varibles";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "local",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f556261696400000000000000000000000000000000000000000000000000000081525060009081620000589190620002d9565b50620003c0565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620000e157607f821691505b602082108103620000f757620000f662000099565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001617fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000122565b6200016d868362000122565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620001ba620001b4620001ae8462000185565b6200018f565b62000185565b9050919050565b6000819050919050565b620001d68362000199565b620001ee620001e582620001c1565b8484546200012f565b825550505050565b600090565b62000205620001f6565b62000212818484620001cb565b505050565b5b818110156200023a576200022e600082620001fb565b60018101905062000218565b5050565b601f82111562000289576200025381620000fd565b6200025e8462000112565b810160208510156200026e578190505b620002866200027d8562000112565b83018262000217565b50505b505050565b600082821c905092915050565b6000620002ae600019846008026200028e565b1980831691505092915050565b6000620002c983836200029b565b9150826002028217905092915050565b620002e4826200005f565b67ffffffffffffffff8111156200030057620002ff6200006a565b5b6200030c8254620000c8565b620003198282856200023e565b600060209050601f8311600181146200035157600084156200033c578287015190505b620003488582620002bb565b865550620003b8565b601f1984166200036186620000fd565b60005b828110156200038b5784890151825560018201915060208501945060208101905062000364565b86831015620003ab5784890151620003a7601f8916826200029b565b8355505b6001600288020188555050505b505050505050565b61043a80620003d06000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630f166ad41461003b5780632bf0f81c14610059575b600080fd5b610043610063565b60405161005091906100d1565b60405180910390f35b610061610071565b005b600080600a90508091505090565b6040518060400160405280600581526020017f41686d6564000000000000000000000000000000000000000000000000000000815250600090816100b59190610332565b50565b6000819050919050565b6100cb816100b8565b82525050565b60006020820190506100e660008301846100c2565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061016d57607f821691505b6020821081036101805761017f610126565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826101ab565b6101f286836101ab565b95508019841693508086168417925050509392505050565b6000819050919050565b600061022f61022a610225846100b8565b61020a565b6100b8565b9050919050565b6000819050919050565b61024983610214565b61025d61025582610236565b8484546101b8565b825550505050565b600090565b610272610265565b61027d818484610240565b505050565b5b818110156102a15761029660008261026a565b600181019050610283565b5050565b601f8211156102e6576102b781610186565b6102c08461019b565b810160208510156102cf578190505b6102e36102db8561019b565b830182610282565b50505b505050565b600082821c905092915050565b6000610309600019846008026102eb565b1980831691505092915050565b600061032283836102f8565b9150826002028217905092915050565b61033b826100ec565b67ffffffffffffffff811115610354576103536100f7565b5b61035e8254610155565b6103698282856102a5565b600060209050601f83116001811461039c576000841561038a578287015190505b6103948582610316565b8655506103fc565b601f1984166103aa86610186565b60005b828110156103d2578489015182556001820191506020850194506020810190506103ad565b868310156103ef57848901516103eb601f8916826102f8565b8355505b6001600288020188555050505b50505050505056fea264697066735822122065f3055adfb4813330055fd7e5d16e58738c624a2f5878b8835f8736afc092c164736f6c63430008120033";

type VariblesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VariblesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Varibles__factory extends ContractFactory {
  constructor(...args: VariblesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Varibles> {
    return super.deploy(overrides || {}) as Promise<Varibles>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Varibles {
    return super.attach(address) as Varibles;
  }
  override connect(signer: Signer): Varibles__factory {
    return super.connect(signer) as Varibles__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VariblesInterface {
    return new utils.Interface(_abi) as VariblesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Varibles {
    return new Contract(address, _abi, signerOrProvider) as Varibles;
  }
}
